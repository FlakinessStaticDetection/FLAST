@Test
public void testRemovingOfActivationStrategy() throws ConnectionException {
    FeatureState savedFeatureState = new FeatureState(TestFeature.FEATURE);
    savedFeatureState.setStrategyId(UsernameActivationStrategy.ID);
    savedFeatureState.setParameter(UsernameActivationStrategy.PARAM_USERS, "user1, user2, user3");
    stateRepository.setFeatureState(savedFeatureState);
    FeatureState loadedFeatureState = stateRepository.getFeatureState(TestFeature.FEATURE);
    assertThat(reflectionEquals(savedFeatureState, loadedFeatureState), is(true));
    // save same feature, but without activation strategy. should remove an existing one
    FeatureState featureStateWithoutStrategy = new FeatureState(TestFeature.FEATURE);
    stateRepository.setFeatureState(featureStateWithoutStrategy);
    loadedFeatureState = stateRepository.getFeatureState(TestFeature.FEATURE);
    assertThat(reflectionEquals(featureStateWithoutStrategy, loadedFeatureState), is(true));
}
